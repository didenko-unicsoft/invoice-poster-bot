// syncCatalog.js
const fs = require('fs');
const path = require('path');
const { posterGet } = require('./posterClient');

function send(ctx, message) {
    if (ctx && ctx.reply) {
        ctx.reply(message);
    } else {
        console.log(message);
    }
}

async function syncSuppliers(ctx) {
    send(ctx, 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤...');
    try {
        const suppliers = await paginate('storage.getSuppliers');

        const suppliersFile = path.join(__dirname, 'suppliers.json');
        fs.writeFileSync(suppliersFile, JSON.stringify(suppliers, null, 2));

        send(ctx, `‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤: ${suppliers.length}`);
    } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ syncSuppliers:', err);
        send(ctx, `‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤: ${err.message}`);
    }
}

async function syncProducts(ctx) {
    send(ctx, 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤...');
    try {
        const products = await paginate('menu.getProducts');

        const productsFile = path.join(__dirname, 'products.json');
        fs.writeFileSync(productsFile, JSON.stringify(products, null, 2));

        send(ctx, `‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–∏: ${products.length}`);
    } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ syncProducts:', err);
        send(ctx, `‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤: ${err.message}`);
    }
}

async function paginate(method) {
    let page = 1;
    let results = [];

    while (true) {
        const data = await posterGet(method, { page });
        if (!data || data.length === 0) break;

        results = results.concat(data);
        page++;
    }

    return results;
}

async function syncAll(ctx) {
    await syncSuppliers(ctx);
    await syncProducts(ctx);
}

module.exports = { syncSuppliers, syncProducts, syncAll };
